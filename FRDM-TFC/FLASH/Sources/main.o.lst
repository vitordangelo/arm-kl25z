   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_ui2d
  18              		.global	__aeabi_ddiv
  19              		.global	__aeabi_dsub
  20              		.global	__aeabi_d2f
  21              		.section	.rodata
  22              		.align	2
  23              	.LC4:
  24 0000 0D0A00   		.ascii	"\015\012\000"
  25 0003 00       		.align	2
  26              	.LC6:
  27 0004 4C3A00   		.ascii	"L:\000"
  28 0007 00       		.align	2
  29              	.LC8:
  30 0008 25582C00 		.ascii	"%X,\000"
  31              		.align	2
  32              	.LC11:
  33 000c 255800   		.ascii	"%X\000"
  34 000f 00       		.align	2
  35              	.LC13:
  36 0010 2C00     		.ascii	",\000"
  37 0012 0000     		.section	.text.main,"ax",%progbits
  38              		.align	2
  39              		.global	main
  40              		.code	16
  41              		.thumb_func
  43              	main:
  44              	.LFB0:
  45              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** 
   4:../Sources/main.c **** 
   5:../Sources/main.c **** int main(void) {
  46              		.loc 1 5 0
  47              		.cfi_startproc
  48 0000 90B5     		push	{r4, r7, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 12
  51              		.cfi_offset 4, -12
  52              		.cfi_offset 7, -8
  53              		.cfi_offset 14, -4
  54 0002 89B0     		sub	sp, sp, #36
  55              	.LCFI1:
  56              		.cfi_def_cfa_offset 48
  57 0004 00AF     		add	r7, sp, #0
  58              	.LCFI2:
  59              		.cfi_def_cfa_register 7
   6:../Sources/main.c **** 	uint32_t t, i = 0, a=0,b=0, media=64, limiar=0xFE0;
  60              		.loc 1 6 0
  61 0006 0023     		mov	r3, #0
  62 0008 BB61     		str	r3, [r7, #24]
  63 000a 0023     		mov	r3, #0
  64 000c 7B61     		str	r3, [r7, #20]
  65 000e 0023     		mov	r3, #0
  66 0010 3B61     		str	r3, [r7, #16]
  67 0012 4023     		mov	r3, #64
  68 0014 FB60     		str	r3, [r7, #12]
  69 0016 FE23     		mov	r3, #254
  70 0018 1B01     		lsl	r3, r3, #4
  71 001a BB60     		str	r3, [r7, #8]
   7:../Sources/main.c **** 	
   8:../Sources/main.c **** 	float teste=0;
  72              		.loc 1 8 0
  73 001c 0023     		mov	r3, #0
  74 001e 7B60     		str	r3, [r7, #4]
   9:../Sources/main.c **** 	TFC_Init();
  75              		.loc 1 9 0
  76 0020 FFF7FEFF 		bl	TFC_Init
  77              	.L36:
  10:../Sources/main.c **** 
  11:../Sources/main.c **** 	for (;;) {
  12:../Sources/main.c **** 
  13:../Sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  14:../Sources/main.c **** 		TFC_Task();
  78              		.loc 1 14 0
  79 0024 FFF7FEFF 		bl	TFC_Task
  15:../Sources/main.c **** 
  16:../Sources/main.c **** 		//This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  17:../Sources/main.c **** 		//Let's look at the middle 2 switches
  18:../Sources/main.c **** 		switch ((TFC_GetDIP_Switch() >> 1) & 0x03) {
  80              		.loc 1 18 0
  81 0028 FFF7FEFF 		bl	TFC_GetDIP_Switch
  82 002c 031C     		mov	r3, r0
  83 002e 5B08     		lsr	r3, r3, #1
  84 0030 DBB2     		uxtb	r3, r3
  85 0032 1A1C     		mov	r2, r3
  86 0034 0323     		mov	r3, #3
  87 0036 1340     		and	r3, r2
  88 0038 022B     		cmp	r3, #2
  89 003a 00D1     		bne	.LCB41
  90 003c 6EE0     		b	.L4	@long jump
  91              	.LCB41:
  92 003e 032B     		cmp	r3, #3
  93 0040 00D1     		bne	.LCB43
  94 0042 91E0     		b	.L5	@long jump
  95              	.LCB43:
  96 0044 012B     		cmp	r3, #1
  97 0046 3ED0     		beq	.L3
  19:../Sources/main.c **** 		default:
  20:../Sources/main.c **** 		case 0:
  21:../Sources/main.c **** 			//Demo mode 0 just tests the switches and LED's
  22:../Sources/main.c **** 			if (TFC_PUSH_BUTTON_0_PRESSED)
  98              		.loc 1 22 0
  99 0048 C14B     		ldr	r3, .L40+16
 100 004a 1A69     		ldr	r2, [r3, #16]
 101 004c 8023     		mov	r3, #128
 102 004e 9B01     		lsl	r3, r3, #6
 103 0050 1340     		and	r3, r2
 104 0052 04D0     		beq	.L6
  23:../Sources/main.c **** 				TFC_BAT_LED0_ON;
 105              		.loc 1 23 0
 106 0054 BF4B     		ldr	r3, .L40+20
 107 0056 8022     		mov	r2, #128
 108 0058 5200     		lsl	r2, r2, #1
 109 005a 5A60     		str	r2, [r3, #4]
 110 005c 03E0     		b	.L7
 111              	.L6:
  24:../Sources/main.c **** 			else
  25:../Sources/main.c **** 				TFC_BAT_LED0_OFF;
 112              		.loc 1 25 0
 113 005e BD4B     		ldr	r3, .L40+20
 114 0060 8022     		mov	r2, #128
 115 0062 5200     		lsl	r2, r2, #1
 116 0064 9A60     		str	r2, [r3, #8]
 117              	.L7:
  26:../Sources/main.c **** 
  27:../Sources/main.c **** 			if (TFC_PUSH_BUTTON_1_PRESSED)
 118              		.loc 1 27 0
 119 0066 BA4B     		ldr	r3, .L40+16
 120 0068 1A69     		ldr	r2, [r3, #16]
 121 006a 8023     		mov	r3, #128
 122 006c 9B02     		lsl	r3, r3, #10
 123 006e 1340     		and	r3, r2
 124 0070 04D0     		beq	.L8
  28:../Sources/main.c **** 				TFC_BAT_LED3_ON;
 125              		.loc 1 28 0
 126 0072 B84B     		ldr	r3, .L40+20
 127 0074 8022     		mov	r2, #128
 128 0076 1201     		lsl	r2, r2, #4
 129 0078 5A60     		str	r2, [r3, #4]
 130 007a 03E0     		b	.L9
 131              	.L8:
  29:../Sources/main.c **** 			else
  30:../Sources/main.c **** 				TFC_BAT_LED3_OFF;
 132              		.loc 1 30 0
 133 007c B54B     		ldr	r3, .L40+20
 134 007e 8022     		mov	r2, #128
 135 0080 1201     		lsl	r2, r2, #4
 136 0082 9A60     		str	r2, [r3, #8]
 137              	.L9:
  31:../Sources/main.c **** 
  32:../Sources/main.c **** 			if (TFC_GetDIP_Switch() & 0x01)
 138              		.loc 1 32 0
 139 0084 FFF7FEFF 		bl	TFC_GetDIP_Switch
 140 0088 031C     		mov	r3, r0
 141 008a 1A1C     		mov	r2, r3
 142 008c 0123     		mov	r3, #1
 143 008e 1340     		and	r3, r2
 144 0090 04D0     		beq	.L10
  33:../Sources/main.c **** 				TFC_BAT_LED1_ON;
 145              		.loc 1 33 0
 146 0092 B04B     		ldr	r3, .L40+20
 147 0094 8022     		mov	r2, #128
 148 0096 9200     		lsl	r2, r2, #2
 149 0098 5A60     		str	r2, [r3, #4]
 150 009a 03E0     		b	.L11
 151              	.L10:
  34:../Sources/main.c **** 			else
  35:../Sources/main.c **** 				TFC_BAT_LED1_OFF;
 152              		.loc 1 35 0
 153 009c AD4B     		ldr	r3, .L40+20
 154 009e 8022     		mov	r2, #128
 155 00a0 9200     		lsl	r2, r2, #2
 156 00a2 9A60     		str	r2, [r3, #8]
 157              	.L11:
  36:../Sources/main.c **** 
  37:../Sources/main.c **** 			if (TFC_GetDIP_Switch() & 0x08)
 158              		.loc 1 37 0
 159 00a4 FFF7FEFF 		bl	TFC_GetDIP_Switch
 160 00a8 031C     		mov	r3, r0
 161 00aa 1A1C     		mov	r2, r3
 162 00ac 0823     		mov	r3, #8
 163 00ae 1340     		and	r3, r2
 164 00b0 04D0     		beq	.L12
  38:../Sources/main.c **** 				TFC_BAT_LED2_ON;
 165              		.loc 1 38 0
 166 00b2 A84B     		ldr	r3, .L40+20
 167 00b4 8022     		mov	r2, #128
 168 00b6 D200     		lsl	r2, r2, #3
 169 00b8 5A60     		str	r2, [r3, #4]
  39:../Sources/main.c **** 			else
  40:../Sources/main.c **** 				TFC_BAT_LED2_OFF;
  41:../Sources/main.c **** 
  42:../Sources/main.c **** 			break;
 170              		.loc 1 42 0
 171 00ba 3DE1     		b	.L14
 172              	.L12:
  40:../Sources/main.c **** 				TFC_BAT_LED2_OFF;
 173              		.loc 1 40 0
 174 00bc A54B     		ldr	r3, .L40+20
 175 00be 8022     		mov	r2, #128
 176 00c0 D200     		lsl	r2, r2, #3
 177 00c2 9A60     		str	r2, [r3, #8]
 178              		.loc 1 42 0
 179 00c4 38E1     		b	.L14
 180              	.L3:
  43:../Sources/main.c **** 
  44:../Sources/main.c **** 		case 1:
  45:../Sources/main.c **** 
  46:../Sources/main.c **** 			//Demo mode 1 will just move the servos with the on-board potentiometers
  47:../Sources/main.c **** 			if (TFC_Ticker[0] >= 20) {
 181              		.loc 1 47 0
 182 00c6 A44B     		ldr	r3, .L40+24
 183 00c8 1B68     		ldr	r3, [r3]
 184 00ca 132B     		cmp	r3, #19
 185 00cc 07D9     		bls	.L15
  48:../Sources/main.c **** 				TFC_Ticker[0] = 0; //reset the Ticker
 186              		.loc 1 48 0
 187 00ce A24B     		ldr	r3, .L40+24
 188 00d0 0022     		mov	r2, #0
 189 00d2 1A60     		str	r2, [r3]
  49:../Sources/main.c **** 				//Every 20 mSeconds, update the Servos
  50:../Sources/main.c **** 				TFC_SetServo(0, 0.0);
 190              		.loc 1 50 0
 191 00d4 0023     		mov	r3, #0
 192 00d6 0020     		mov	r0, #0
 193 00d8 191C     		add	r1, r3, #0
 194 00da FFF7FEFF 		bl	TFC_SetServo
 195              	.L15:
  51:../Sources/main.c **** 				//	TFC_SetServo(1,TFC_ReadPot(1));
  52:../Sources/main.c **** 			}
  53:../Sources/main.c **** 			//Let's put a pattern on the LEDs
  54:../Sources/main.c **** 			if (TFC_Ticker[1] >= 125) {
 196              		.loc 1 54 0
 197 00de 9E4B     		ldr	r3, .L40+24
 198 00e0 5B68     		ldr	r3, [r3, #4]
 199 00e2 7C2B     		cmp	r3, #124
 200 00e4 0FD9     		bls	.L16
  55:../Sources/main.c **** 				TFC_Ticker[1] = 0;
 201              		.loc 1 55 0
 202 00e6 9C4B     		ldr	r3, .L40+24
 203 00e8 0022     		mov	r2, #0
 204 00ea 5A60     		str	r2, [r3, #4]
  56:../Sources/main.c **** 				t++;
 205              		.loc 1 56 0
 206 00ec FB69     		ldr	r3, [r7, #28]
 207 00ee 0133     		add	r3, r3, #1
 208 00f0 FB61     		str	r3, [r7, #28]
  57:../Sources/main.c **** 				if (t > 4) {
 209              		.loc 1 57 0
 210 00f2 FB69     		ldr	r3, [r7, #28]
 211 00f4 042B     		cmp	r3, #4
 212 00f6 01D9     		bls	.L17
  58:../Sources/main.c **** 					t = 0;
 213              		.loc 1 58 0
 214 00f8 0023     		mov	r3, #0
 215 00fa FB61     		str	r3, [r7, #28]
 216              	.L17:
  59:../Sources/main.c **** 				}
  60:../Sources/main.c **** 				TFC_SetBatteryLED_Level(t);
 217              		.loc 1 60 0
 218 00fc FB69     		ldr	r3, [r7, #28]
 219 00fe DBB2     		uxtb	r3, r3
 220 0100 181C     		mov	r0, r3
 221 0102 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 222              	.L16:
  61:../Sources/main.c **** 			}
  62:../Sources/main.c **** 
  63:../Sources/main.c **** 			TFC_SetMotorPWM(0, 0); //Make sure motors are off
 223              		.loc 1 63 0
 224 0106 0022     		mov	r2, #0
 225 0108 0023     		mov	r3, #0
 226 010a 101C     		add	r0, r2, #0
 227 010c 191C     		add	r1, r3, #0
 228 010e FFF7FEFF 		bl	TFC_SetMotorPWM
  64:../Sources/main.c **** 			TFC_HBRIDGE_DISABLE;
 229              		.loc 1 64 0
 230 0112 924B     		ldr	r3, .L40+28
 231 0114 8022     		mov	r2, #128
 232 0116 9203     		lsl	r2, r2, #14
 233 0118 9A60     		str	r2, [r3, #8]
  65:../Sources/main.c **** 
  66:../Sources/main.c **** 			break;
 234              		.loc 1 66 0
 235 011a 0DE1     		b	.L14
 236              	.L4:
  67:../Sources/main.c **** 
  68:../Sources/main.c **** 		case 2:
  69:../Sources/main.c **** 
  70:../Sources/main.c **** 			//Demo Mode 2 will use the Pots to make the motors move
  71:../Sources/main.c **** 			TFC_HBRIDGE_ENABLE;
 237              		.loc 1 71 0
 238 011c 8F4B     		ldr	r3, .L40+28
 239 011e 8022     		mov	r2, #128
 240 0120 9203     		lsl	r2, r2, #14
 241 0122 5A60     		str	r2, [r3, #4]
  72:../Sources/main.c **** 			TFC_SetMotorPWM(TFC_ReadPot(0), TFC_ReadPot(1));
 242              		.loc 1 72 0
 243 0124 0020     		mov	r0, #0
 244 0126 FFF7FEFF 		bl	TFC_ReadPot
 245 012a 041C     		add	r4, r0, #0
 246 012c 0120     		mov	r0, #1
 247 012e FFF7FEFF 		bl	TFC_ReadPot
 248 0132 031C     		add	r3, r0, #0
 249 0134 201C     		add	r0, r4, #0
 250 0136 191C     		add	r1, r3, #0
 251 0138 FFF7FEFF 		bl	TFC_SetMotorPWM
  73:../Sources/main.c **** 
  74:../Sources/main.c **** 			//Let's put a pattern on the LEDs
  75:../Sources/main.c **** 			if (TFC_Ticker[1] >= 125) {
 252              		.loc 1 75 0
 253 013c 864B     		ldr	r3, .L40+24
 254 013e 5B68     		ldr	r3, [r3, #4]
 255 0140 7C2B     		cmp	r3, #124
 256 0142 00D8     		bhi	.LCB197
 257 0144 F5E0     		b	.L37	@long jump
 258              	.LCB197:
  76:../Sources/main.c **** 				TFC_Ticker[1] = 0;
 259              		.loc 1 76 0
 260 0146 844B     		ldr	r3, .L40+24
 261 0148 0022     		mov	r2, #0
 262 014a 5A60     		str	r2, [r3, #4]
  77:../Sources/main.c **** 				t++;
 263              		.loc 1 77 0
 264 014c FB69     		ldr	r3, [r7, #28]
 265 014e 0133     		add	r3, r3, #1
 266 0150 FB61     		str	r3, [r7, #28]
  78:../Sources/main.c **** 				if (t > 4) {
 267              		.loc 1 78 0
 268 0152 FB69     		ldr	r3, [r7, #28]
 269 0154 042B     		cmp	r3, #4
 270 0156 01D9     		bls	.L19
  79:../Sources/main.c **** 					t = 0;
 271              		.loc 1 79 0
 272 0158 0023     		mov	r3, #0
 273 015a FB61     		str	r3, [r7, #28]
 274              	.L19:
  80:../Sources/main.c **** 				}
  81:../Sources/main.c **** 				TFC_SetBatteryLED_Level(t);
 275              		.loc 1 81 0
 276 015c FB69     		ldr	r3, [r7, #28]
 277 015e DBB2     		uxtb	r3, r3
 278 0160 181C     		mov	r0, r3
 279 0162 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  82:../Sources/main.c **** 			}
  83:../Sources/main.c **** 			break;
 280              		.loc 1 83 0
 281 0166 E4E0     		b	.L37
 282              	.L5:
  84:../Sources/main.c **** 
  85:../Sources/main.c **** 		case 3:
  86:../Sources/main.c **** 				if(LineScanImageReady == 1){
 283              		.loc 1 86 0
 284 0168 7D4B     		ldr	r3, .L40+32
 285 016a 1B78     		ldrb	r3, [r3]
 286 016c DBB2     		uxtb	r3, r3
 287 016e 012B     		cmp	r3, #1
 288 0170 65D1     		bne	.L20
  87:../Sources/main.c **** 				
  88:../Sources/main.c **** 				a=63;
 289              		.loc 1 88 0
 290 0172 3F23     		mov	r3, #63
 291 0174 7B61     		str	r3, [r7, #20]
  89:../Sources/main.c **** 				b=64;
 292              		.loc 1 89 0
 293 0176 4023     		mov	r3, #64
 294 0178 3B61     		str	r3, [r7, #16]
  90:../Sources/main.c **** 				while(LineScanImage0[a]>=limiar || LineScanImage0[b]>=limiar)
 295              		.loc 1 90 0
 296 017a 1BE0     		b	.L21
 297              	.L23:
  91:../Sources/main.c **** 				{
  92:../Sources/main.c **** 					if(LineScanImage0[a]>=limiar)
 298              		.loc 1 92 0
 299 017c 794B     		ldr	r3, .L40+36
 300 017e 1A68     		ldr	r2, [r3]
 301 0180 7B69     		ldr	r3, [r7, #20]
 302 0182 5B00     		lsl	r3, r3, #1
 303 0184 D318     		add	r3, r2, r3
 304 0186 1B88     		ldrh	r3, [r3]
 305 0188 9BB2     		uxth	r3, r3
 306 018a 1A1C     		mov	r2, r3
 307 018c BB68     		ldr	r3, [r7, #8]
 308 018e 9A42     		cmp	r2, r3
 309 0190 02D3     		bcc	.L22
  93:../Sources/main.c **** 					{
  94:../Sources/main.c **** 						a--;
 310              		.loc 1 94 0
 311 0192 7B69     		ldr	r3, [r7, #20]
 312 0194 013B     		sub	r3, r3, #1
 313 0196 7B61     		str	r3, [r7, #20]
 314              	.L22:
  95:../Sources/main.c **** 					}
  96:../Sources/main.c **** 					if(LineScanImage0[b]>=limiar)
 315              		.loc 1 96 0
 316 0198 724B     		ldr	r3, .L40+36
 317 019a 1A68     		ldr	r2, [r3]
 318 019c 3B69     		ldr	r3, [r7, #16]
 319 019e 5B00     		lsl	r3, r3, #1
 320 01a0 D318     		add	r3, r2, r3
 321 01a2 1B88     		ldrh	r3, [r3]
 322 01a4 9BB2     		uxth	r3, r3
 323 01a6 1A1C     		mov	r2, r3
 324 01a8 BB68     		ldr	r3, [r7, #8]
 325 01aa 9A42     		cmp	r2, r3
 326 01ac 02D3     		bcc	.L21
  97:../Sources/main.c **** 					{
  98:../Sources/main.c **** 						b++;
 327              		.loc 1 98 0
 328 01ae 3B69     		ldr	r3, [r7, #16]
 329 01b0 0133     		add	r3, r3, #1
 330 01b2 3B61     		str	r3, [r7, #16]
 331              	.L21:
  90:../Sources/main.c **** 				while(LineScanImage0[a]>=limiar || LineScanImage0[b]>=limiar)
 332              		.loc 1 90 0
 333 01b4 6B4B     		ldr	r3, .L40+36
 334 01b6 1A68     		ldr	r2, [r3]
 335 01b8 7B69     		ldr	r3, [r7, #20]
 336 01ba 5B00     		lsl	r3, r3, #1
 337 01bc D318     		add	r3, r2, r3
 338 01be 1B88     		ldrh	r3, [r3]
 339 01c0 9BB2     		uxth	r3, r3
 340 01c2 1A1C     		mov	r2, r3
 341 01c4 BB68     		ldr	r3, [r7, #8]
 342 01c6 9A42     		cmp	r2, r3
 343 01c8 D8D2     		bcs	.L23
  90:../Sources/main.c **** 				while(LineScanImage0[a]>=limiar || LineScanImage0[b]>=limiar)
 344              		.loc 1 90 0 is_stmt 0
 345 01ca 664B     		ldr	r3, .L40+36
 346 01cc 1A68     		ldr	r2, [r3]
 347 01ce 3B69     		ldr	r3, [r7, #16]
 348 01d0 5B00     		lsl	r3, r3, #1
 349 01d2 D318     		add	r3, r2, r3
 350 01d4 1B88     		ldrh	r3, [r3]
 351 01d6 9BB2     		uxth	r3, r3
 352 01d8 1A1C     		mov	r2, r3
 353 01da BB68     		ldr	r3, [r7, #8]
 354 01dc 9A42     		cmp	r2, r3
 355 01de CDD2     		bcs	.L23
  99:../Sources/main.c **** 					}
 100:../Sources/main.c **** 				}
 101:../Sources/main.c **** 				if((b-a)<=50)
 356              		.loc 1 101 0 is_stmt 1
 357 01e0 3A69     		ldr	r2, [r7, #16]
 358 01e2 7B69     		ldr	r3, [r7, #20]
 359 01e4 D31A     		sub	r3, r2, r3
 360 01e6 322B     		cmp	r3, #50
 361 01e8 08D9     		bls	.L38
 362              	.L24:
 102:../Sources/main.c **** 				{
 103:../Sources/main.c **** 					media=media;
 104:../Sources/main.c **** 				}
 105:../Sources/main.c **** 				else
 106:../Sources/main.c **** 				{
 107:../Sources/main.c **** 					media=(int)(a+b)/2;
 363              		.loc 1 107 0
 364 01ea 7A69     		ldr	r2, [r7, #20]
 365 01ec 3B69     		ldr	r3, [r7, #16]
 366 01ee D318     		add	r3, r2, r3
 367 01f0 002B     		cmp	r3, #0
 368 01f2 00DA     		bge	.L26
 369 01f4 0133     		add	r3, r3, #1
 370              	.L26:
 371 01f6 5B10     		asr	r3, r3, #1
 372 01f8 FB60     		str	r3, [r7, #12]
 373 01fa 00E0     		b	.L25
 374              	.L38:
 103:../Sources/main.c **** 					media=media;
 375              		.loc 1 103 0
 376 01fc C046     		mov	r8, r8
 377              	.L25:
 108:../Sources/main.c **** 				}
 109:../Sources/main.c **** 			/*if(media<60)TFC_SetServo(0,-0.5);
 110:../Sources/main.c **** 				else if (media>70)
 111:../Sources/main.c **** 					TFC_SetServo(0,0.5);
 112:../Sources/main.c **** 				else TFC_SetServo(0,0);
 113:../Sources/main.c **** 			
 114:../Sources/main.c **** 				if(LineScanImage0[a]<=limiar)
 115:../Sources/main.c **** 				{
 116:../Sources/main.c **** 					TFC_SetServo(0,1.0);
 117:../Sources/main.c **** 				}
 118:../Sources/main.c **** 				else if(LineScanImage0[b]<=limiar)
 119:../Sources/main.c **** 				{
 120:../Sources/main.c **** 					TFC_SetServo(0,-1.0);
 121:../Sources/main.c **** 				}
 122:../Sources/main.c **** 				else 
 123:../Sources/main.c **** 				TFC_HBRIDGE_ENABLE;
 124:../Sources/main.c **** 				
 125:../Sources/main.c **** 				if(teste>0.1)	TFC_SetMotorPWM(7.0/20.0,0.2);
 126:../Sources/main.c **** 				else if(teste<-0.1)TFC_SetMotorPWM(0.2,7.0/20.0);
 127:../Sources/main.c **** 				else 
 128:../Sources/main.c **** 					TFC_SetMotorPWM(0.5,0.5);
 129:../Sources/main.c **** 					*/
 130:../Sources/main.c **** 			teste=media/64.0-1.0;
 378              		.loc 1 130 0
 379 01fe F868     		ldr	r0, [r7, #12]
 380 0200 FFF7FEFF 		bl	__aeabi_ui2d
 381 0204 031C     		mov	r3, r0
 382 0206 0C1C     		mov	r4, r1
 383 0208 181C     		mov	r0, r3
 384 020a 211C     		mov	r1, r4
 385 020c 4D4B     		ldr	r3, .L40+4
 386 020e 4C4A     		ldr	r2, .L40
 387 0210 FFF7FEFF 		bl	__aeabi_ddiv
 388 0214 031C     		mov	r3, r0
 389 0216 0C1C     		mov	r4, r1
 390 0218 181C     		mov	r0, r3
 391 021a 211C     		mov	r1, r4
 392 021c 4A4A     		ldr	r2, .L40+8
 393 021e 4B4B     		ldr	r3, .L40+12
 394 0220 FFF7FEFF 		bl	__aeabi_dsub
 395 0224 031C     		mov	r3, r0
 396 0226 0C1C     		mov	r4, r1
 397 0228 181C     		mov	r0, r3
 398 022a 211C     		mov	r1, r4
 399 022c FFF7FEFF 		bl	__aeabi_d2f
 400 0230 031C     		add	r3, r0, #0
 401 0232 7B60     		str	r3, [r7, #4]
 131:../Sources/main.c **** 					TFC_SetServo(0,teste);
 402              		.loc 1 131 0
 403 0234 7B68     		ldr	r3, [r7, #4]
 404 0236 0020     		mov	r0, #0
 405 0238 191C     		add	r1, r3, #0
 406 023a FFF7FEFF 		bl	TFC_SetServo
 407              	.L20:
 132:../Sources/main.c **** 			}
 133:../Sources/main.c **** 			
 134:../Sources/main.c **** 			
 135:../Sources/main.c **** 
 136:../Sources/main.c **** 			//Demo Mode 3 will be in Freescale Garage Mode.  It will beam data from the Camera to the 
 137:../Sources/main.c **** 			//Labview Application
 138:../Sources/main.c **** 
 139:../Sources/main.c **** 			if (TFC_Ticker[0] > 100 && LineScanImageReady == 1) {
 408              		.loc 1 139 0
 409 023e 464B     		ldr	r3, .L40+24
 410 0240 1B68     		ldr	r3, [r3]
 411 0242 642B     		cmp	r3, #100
 412 0244 00D8     		bhi	.LCB339
 413 0246 76E0     		b	.L39	@long jump
 414              	.LCB339:
 415              		.loc 1 139 0 is_stmt 0
 416 0248 454B     		ldr	r3, .L40+32
 417 024a 1B78     		ldrb	r3, [r3]
 418 024c DBB2     		uxtb	r3, r3
 419 024e 012B     		cmp	r3, #1
 420 0250 00D0     		beq	.LCB344
 421 0252 70E0     		b	.L39	@long jump
 422              	.LCB344:
 140:../Sources/main.c **** 				TFC_Ticker[0] = 0;
 423              		.loc 1 140 0 is_stmt 1
 424 0254 404B     		ldr	r3, .L40+24
 425 0256 0022     		mov	r2, #0
 426 0258 1A60     		str	r2, [r3]
 141:../Sources/main.c **** 				LineScanImageReady = 0;
 427              		.loc 1 141 0
 428 025a 414B     		ldr	r3, .L40+32
 429 025c 0022     		mov	r2, #0
 430 025e 1A70     		strb	r2, [r3]
 142:../Sources/main.c **** 				TERMINAL_PRINTF("\r\n");
 431              		.loc 1 142 0
 432 0260 414A     		ldr	r2, .L40+40
 433 0262 424B     		ldr	r3, .L40+44
 434 0264 101C     		mov	r0, r2
 435 0266 191C     		mov	r1, r3
 436 0268 FFF7FEFF 		bl	Qprintf
 143:../Sources/main.c **** 				TERMINAL_PRINTF("L:");
 437              		.loc 1 143 0
 438 026c 3E4A     		ldr	r2, .L40+40
 439 026e 404B     		ldr	r3, .L40+48
 440 0270 101C     		mov	r0, r2
 441 0272 191C     		mov	r1, r3
 442 0274 FFF7FEFF 		bl	Qprintf
 144:../Sources/main.c **** 
 145:../Sources/main.c **** 				if (t == 0)
 443              		.loc 1 145 0
 444 0278 FB69     		ldr	r3, [r7, #28]
 445 027a 002B     		cmp	r3, #0
 446 027c 02D1     		bne	.L28
 146:../Sources/main.c **** 					t = 3;
 447              		.loc 1 146 0
 448 027e 0323     		mov	r3, #3
 449 0280 FB61     		str	r3, [r7, #28]
 450 0282 02E0     		b	.L29
 451              	.L28:
 147:../Sources/main.c **** 				else
 148:../Sources/main.c **** 					t--;
 452              		.loc 1 148 0
 453 0284 FB69     		ldr	r3, [r7, #28]
 454 0286 013B     		sub	r3, r3, #1
 455 0288 FB61     		str	r3, [r7, #28]
 456              	.L29:
 149:../Sources/main.c **** 
 150:../Sources/main.c **** 				TFC_SetBatteryLED_Level(t);
 457              		.loc 1 150 0
 458 028a FB69     		ldr	r3, [r7, #28]
 459 028c DBB2     		uxtb	r3, r3
 460 028e 181C     		mov	r0, r3
 461 0290 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 151:../Sources/main.c **** 
 152:../Sources/main.c **** 				for (i = 0; i < 128; i++) {
 462              		.loc 1 152 0
 463 0294 0023     		mov	r3, #0
 464 0296 BB61     		str	r3, [r7, #24]
 465 0298 10E0     		b	.L30
 466              	.L31:
 153:../Sources/main.c **** 					TERMINAL_PRINTF("%X,", LineScanImage0[i]);
 467              		.loc 1 153 0
 468 029a 324B     		ldr	r3, .L40+36
 469 029c 1A68     		ldr	r2, [r3]
 470 029e BB69     		ldr	r3, [r7, #24]
 471 02a0 5B00     		lsl	r3, r3, #1
 472 02a2 D318     		add	r3, r2, r3
 473 02a4 1B88     		ldrh	r3, [r3]
 474 02a6 9BB2     		uxth	r3, r3
 475 02a8 2F49     		ldr	r1, .L40+40
 476 02aa 324A     		ldr	r2, .L40+52
 477 02ac 081C     		mov	r0, r1
 478 02ae 111C     		mov	r1, r2
 479 02b0 1A1C     		mov	r2, r3
 480 02b2 FFF7FEFF 		bl	Qprintf
 152:../Sources/main.c **** 				for (i = 0; i < 128; i++) {
 481              		.loc 1 152 0
 482 02b6 BB69     		ldr	r3, [r7, #24]
 483 02b8 0133     		add	r3, r3, #1
 484 02ba BB61     		str	r3, [r7, #24]
 485              	.L30:
 152:../Sources/main.c **** 				for (i = 0; i < 128; i++) {
 486              		.loc 1 152 0 is_stmt 0
 487 02bc BB69     		ldr	r3, [r7, #24]
 488 02be 7F2B     		cmp	r3, #127
 489 02c0 EBD9     		bls	.L31
 154:../Sources/main.c **** 				}
 155:../Sources/main.c **** 
 156:../Sources/main.c **** 				for (i = 0; i < 128; i++) {
 490              		.loc 1 156 0 is_stmt 1
 491 02c2 0023     		mov	r3, #0
 492 02c4 BB61     		str	r3, [r7, #24]
 493 02c6 30E0     		b	.L32
 494              	.L35:
 157:../Sources/main.c **** 					TERMINAL_PRINTF("%X", LineScanImage1[i]);
 495              		.loc 1 157 0
 496 02c8 2B4B     		ldr	r3, .L40+56
 497 02ca 1A68     		ldr	r2, [r3]
 498 02cc BB69     		ldr	r3, [r7, #24]
 499 02ce 5B00     		lsl	r3, r3, #1
 500 02d0 D318     		add	r3, r2, r3
 501 02d2 1B88     		ldrh	r3, [r3]
 502 02d4 9BB2     		uxth	r3, r3
 503 02d6 2449     		ldr	r1, .L40+40
 504 02d8 284A     		ldr	r2, .L40+60
 505 02da 081C     		mov	r0, r1
 506 02dc 111C     		mov	r1, r2
 507 02de 1A1C     		mov	r2, r3
 508 02e0 FFF7FEFF 		bl	Qprintf
 158:../Sources/main.c **** 					if (i == 127)
 509              		.loc 1 158 0
 510 02e4 BB69     		ldr	r3, [r7, #24]
 511 02e6 7F2B     		cmp	r3, #127
 512 02e8 0ED1     		bne	.L33
 159:../Sources/main.c **** 						TERMINAL_PRINTF("\r\n", LineScanImage1[i]);
 513              		.loc 1 159 0
 514 02ea 234B     		ldr	r3, .L40+56
 515 02ec 1A68     		ldr	r2, [r3]
 516 02ee BB69     		ldr	r3, [r7, #24]
 517 02f0 5B00     		lsl	r3, r3, #1
 518 02f2 D318     		add	r3, r2, r3
 519 02f4 1B88     		ldrh	r3, [r3]
 520 02f6 9BB2     		uxth	r3, r3
 521 02f8 1B49     		ldr	r1, .L40+40
 522 02fa 1C4A     		ldr	r2, .L40+44
 523 02fc 081C     		mov	r0, r1
 524 02fe 111C     		mov	r1, r2
 525 0300 1A1C     		mov	r2, r3
 526 0302 FFF7FEFF 		bl	Qprintf
 527 0306 0DE0     		b	.L34
 528              	.L33:
 160:../Sources/main.c **** 					else
 161:../Sources/main.c **** 						TERMINAL_PRINTF(",", LineScanImage1[i]);
 529              		.loc 1 161 0
 530 0308 1B4B     		ldr	r3, .L40+56
 531 030a 1A68     		ldr	r2, [r3]
 532 030c BB69     		ldr	r3, [r7, #24]
 533 030e 5B00     		lsl	r3, r3, #1
 534 0310 D318     		add	r3, r2, r3
 535 0312 1B88     		ldrh	r3, [r3]
 536 0314 9BB2     		uxth	r3, r3
 537 0316 1449     		ldr	r1, .L40+40
 538 0318 194A     		ldr	r2, .L40+64
 539 031a 081C     		mov	r0, r1
 540 031c 111C     		mov	r1, r2
 541 031e 1A1C     		mov	r2, r3
 542 0320 FFF7FEFF 		bl	Qprintf
 543              	.L34:
 156:../Sources/main.c **** 				for (i = 0; i < 128; i++) {
 544              		.loc 1 156 0
 545 0324 BB69     		ldr	r3, [r7, #24]
 546 0326 0133     		add	r3, r3, #1
 547 0328 BB61     		str	r3, [r7, #24]
 548              	.L32:
 156:../Sources/main.c **** 				for (i = 0; i < 128; i++) {
 549              		.loc 1 156 0 is_stmt 0
 550 032a BB69     		ldr	r3, [r7, #24]
 551 032c 7F2B     		cmp	r3, #127
 552 032e CBD9     		bls	.L35
 162:../Sources/main.c **** 				}
 163:../Sources/main.c **** 
 164:../Sources/main.c **** 			}
 165:../Sources/main.c **** 
 166:../Sources/main.c **** 			break;
 553              		.loc 1 166 0 is_stmt 1
 554 0330 01E0     		b	.L39
 555              	.L37:
  83:../Sources/main.c **** 			break;
 556              		.loc 1 83 0
 557 0332 C046     		mov	r8, r8
 558 0334 00E0     		b	.L14
 559              	.L39:
 560              		.loc 1 166 0
 561 0336 C046     		mov	r8, r8
 562              	.L14:
 167:../Sources/main.c **** 		}
 168:../Sources/main.c **** 	}
 563              		.loc 1 168 0
 564 0338 74E6     		b	.L36
 565              	.L41:
 566 033a C046C046 		.align	3
 566      C046
 567              	.L40:
 568 0340 00000000 		.word	0
 569 0344 00005040 		.word	1078984704
 570 0348 00000000 		.word	0
 571 034c 0000F03F 		.word	1072693248
 572 0350 80F00F40 		.word	1074786432
 573 0354 40F00F40 		.word	1074786368
 574 0358 00000000 		.word	TFC_Ticker
 575 035c 00F10F40 		.word	1074786560
 576 0360 00000000 		.word	LineScanImageReady
 577 0364 00000000 		.word	LineScanImage0
 578 0368 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 579 036c 00000000 		.word	.LC4
 580 0370 04000000 		.word	.LC6
 581 0374 08000000 		.word	.LC8
 582 0378 00000000 		.word	LineScanImage1
 583 037c 0C000000 		.word	.LC11
 584 0380 10000000 		.word	.LC13
 585              		.cfi_endproc
 586              	.LFE0:
 588 0384 C046C046 		.text
 589              	.Letext0:
 590              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 591              		.file 3 "C:/Documents and Settings/aluno/git/arm-kl25z/FRDM-TFC/Project_Headers/MKL25Z4.h"
 592              		.file 4 "C:/Documents and Settings/aluno/git/arm-kl25z/FRDM-TFC/Project_Headers/TFC\\TFC_Queue.h"
 593              		.file 5 "C:/Documents and Settings/aluno/git/arm-kl25z/FRDM-TFC/Project_Headers/TFC\\TFC_ARM_SysTi
 594              		.file 6 "C:/Documents and Settings/aluno/git/arm-kl25z/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanC
 595              		.file 7 "C:/Documents and Settings/aluno/git/arm-kl25z/FRDM-TFC/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\DOCUME~1\aluno\CONFIG~1\Temp\cclGw2nh.s:22     .rodata:00000000 $d
C:\DOCUME~1\aluno\CONFIG~1\Temp\cclGw2nh.s:38     .text.main:00000000 $t
C:\DOCUME~1\aluno\CONFIG~1\Temp\cclGw2nh.s:43     .text.main:00000000 main
C:\DOCUME~1\aluno\CONFIG~1\Temp\cclGw2nh.s:568    .text.main:00000340 $d
                     .debug_frame:00000010 $d
C:\DOCUME~1\aluno\CONFIG~1\Temp\cclGw2nh.s:588    .text.main:00000384 $t

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_dsub
__aeabi_d2f
TFC_Init
TFC_Task
TFC_GetDIP_Switch
TFC_SetServo
TFC_SetBatteryLED_Level
TFC_SetMotorPWM
TFC_ReadPot
Qprintf
TFC_Ticker
LineScanImageReady
LineScanImage0
SDA_SERIAL_OUTGOING_QUEUE
LineScanImage1
